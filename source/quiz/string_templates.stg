module(name, stat) ::= <<
import java.util.HashMap;

public class <name> {
    static HashMap\<String, Double> vars = new HashMap\<>();

    <stats(stat)>
}
>>

main(stat) ::= <<
public static void main(String[] args) {
    <stats(stat)>
}
>>

handle_var_number(stat, type, var, value) ::= <<
<stats(stat)>
<atrib(type, var, value)>
>>

stats(stat) ::= <<
<if(stat)><stat; separator="\n"><endif>
>>

get_from_map(id, var) ::= <<
double <var> = vars.containsKey("<id>") ? vars.get("<id>") : null;
>>

tmp_atrib(type, var, value) ::= <<
<type> <var> = <value>;
>>

atrib(type, var, value, id) ::= <<
<type> <var> = <value>;
vars.put("<id>", <var>);
>>

binary_operation(stat, id, type, var, e1, op, e2) ::= <<
<stats(stat)>
<atrib(type, var, [e1, op, e2], id)>
>>

print(stat, text) ::= <<
<stats(stat)>
System.out.println(<text>);
>>

function(name, return_type, building_return, param, stat, ret) ::= <<
public static <return_type> <name>(<param>) {
    <stats(stat)>
    <if(ret)>

    // building the return statement
    <building_return>
    return <ret>;
    <endif>
}
>>

callfunc(name, param) ::= <<
<name>(<param>);
>>